
buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io/"
        }
        maven {
            name = "sponge"
            url = "https://repo.spongepowered.org/maven"
        }
    }
    dependencies {
        classpath 'com.github.vojkovic:ForgeGradle:d974a94268'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

version = "1.0.0"
group= "au.priv.smoothchat"
archivesBaseName = "smoothchat"
sourceCompatibility = 8
targetCompatibility = 8

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    // makeObfSourceJar = false
}

repositories {
    maven { url 'https://repo.spongepowered.org/maven/' }
}

dependencies {
    provided('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }
}

mixin {
    add sourceSets.main, "mixins.smoothchat.refmap.json"
}

jar {
    from configurations.provided.asFileTree.files.collect {
        zipTree(it)
    }

    manifest.attributes(
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'MixinConfigs': "smoothchat.mixins.json",
            'FMLCorePluginContainsFMLMod': true,
            "ForceLoadAsMod": true
    )
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
                todir: "${buildDir}/classes/java"
    }
}

moveResources.dependsOn processResources
classes.dependsOn moveResources
